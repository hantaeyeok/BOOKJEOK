<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.bookjeok.member.model.dao.MemberMapper">
	
	<select id="getMemberByEmail" parameterType="member" resultType="member">
		SELECT
				m.USER_ID userId,
				m.USER_PWD userPwd,
				m.USER_NAME userName,
				m.ENROLL_DATE enrollDate,
				m.MODIFY_DATE modifyDate,
				m.STATUS status,
				m.MILEAGE mileage,
				e.EMAIL email
		FROM
				MEMBER m
			LEFT JOIN
				MEMBER_EMAIL e
			ON
				m.USER_ID = e.USER_ID
		WHERE
				e.EMAIL = #{email}
		AND
				m.STATUS = 'Y'
	</select>
	<update id="updatePwd">
		UPDATE
				MEMBER
			SET
				USER_PWD=#{userPwd}
		WHERE
				USER_ID=#{userId}
	</update>
	
	<update id="updatePhone" parameterType="member">
		UPDATE
				MEMBER_PHONE
			SET
				PHONE=#{phone}
		WHERE
				USER_ID=#{userId}
	</update>
	<update id="updateAddress" parameterType="member">
		UPDATE
				MEMBER_ADDRESS
			SET
				ADDRESS=#{address},
				ADDRESS_DETAIL=#{addressDetail},
				POSTNUM=#{postnum}
		WHERE
				USER_ID=#{userId}
	</update>
	<update id="updateEmail" parameterType="member">
		UPDATE
				MEMBER_EMAIL
			SET
				EMAIL=#{email}
		WHERE
				USER_ID=#{userId}
	</update>
	<update id="updateGender" parameterType="member">
		UPDATE
				MEMBER_GENDER
			SET
				GENDER=#{gender}
		WHERE
				USER_ID=#{userId}
	</update>
	
	<select id="idCheck" parameterType="string" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			MEMBER
		WHERE
			USER_ID = #{idCheck}
	</select>
	<select id="emailCheck" parameterType="string" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			MEMBER_EMAIL
		WHERE
			EMAIL = #{emailCheck}
	</select>
	<select id="login" parameterType="member" resultType="member">
		SELECT
				m.USER_ID userId,
				m.USER_PWD userPwd,
				m.USER_NAME userName,
				m.ENROLL_DATE enrollDate,
				m.MODIFY_DATE modifyDate,
				m.STATUS status,
				m.MILEAGE mileage,
				e.EMAIL email,
				p.PHONE phone,
				a.ADDRESS address,
				a.ADDRESS_DETAIL addressDetail,
				a.POSTNUM postnum,
				g.GENDER gender
		FROM
				MEMBER m
			LEFT JOIN
				MEMBER_EMAIL e
			ON
				m.USER_ID = e.USER_ID
			LEFT JOIN
				MEMBER_PHONE p
			ON
				m.USER_ID = p.USER_ID
			LEFT JOIN
				MEMBER_ADDRESS a
			ON
				m.USER_ID = a.USER_ID
			LEFT JOIN
				MEMBER_GENDER g
			ON
				m.USER_ID = g.USER_ID
		WHERE
				m.USER_ID = #{userId}
		AND
				m.STATUS = 'Y'
	</select>
	<insert id="insertMem" parameterType="member">
		INSERT ALL
			INTO
					MEMBER
				VALUES
					(
					 #{userId},
					 #{userPwd},
					 #{userName},
					 DEFAULT,
					 DEFAULT,
					 DEFAULT,
					 DEFAULT
					)
			INTO
					MEMBER_EMAIL
				VALUES
					(
					#{userId},
					#{email}
					)
			<if test='address!=null and !"".equals(address)'>
			INTO
					MEMBER_ADDRESS
				VALUES
					(
					#{userId},
					#{address},
					#{addressDetail},
					#{postnum}
					)
			</if>
			<if test='gender!=null and !"".equals(gender)'>
			INTO
					MEMBER_GENDER
				VALUES
					(
					#{userId},
					#{gender}
					)
			</if>
			<if test='phone!=null and !"".equals(phone)'>
			INTO
					MEMBER_PHONE
				VALUES
					(
					#{userId},
					#{phone}
					)
			</if>
			SELECT 1 FROM DUAL
	</insert>
</mapper>